package main

import "fmt"
/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms 
will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

func Fibonacci(N int) (int,int) {
    if N<=0 {return 0,0}
    if N==1 {return 1,1}
    if N==2 {return 2,3}
    
    farray:= make ([]int,N,N);
    farray[0]=1
    farray[1]=2
    var value int
    sum:=2
    for i:=2;i<N;i++ {
      value=farray[i-1]+farray[i-2]
      farray[i]=value
      if value%2==0{
      sum+=value
      }
    }
    return value,sum
}

func main(){
    for i:=0;;i++{
      v,s:=Fibonacci(i)
      if v>4000000 {break}
      fmt.Println(i,v,s)      
    }
}